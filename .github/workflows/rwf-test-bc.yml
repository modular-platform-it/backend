---
name: Reusable workflow - test app
on:
  workflow_call:
    inputs:
      PYTHON_VERSION:
        required: true
        type: string
      POETRY_VERSION:
        required: true
        type: string
      APP_NAME:
        required: true
        type: string
jobs:
  test:
    name: Poetry & Pytest
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{inputs.PYTHON_VERSION}}
      # - name: Pre-commit global check
      #   uses: pre-commit/action@v3.0.1
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: ./${{inputs.APP_NAME}}
          version: ${{inputs.POETRY_VERSION}}
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{runner.os}}-${{steps.setup-python.outputs.python-version}}-${{
            hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          cd ${{inputs.APP_NAME}}/
          poetry install --no-interaction --no-root
      - name: Run local tests
        run: |
          source $VENV
          cd ${{inputs.APP_NAME}}/
          python manage.py test
