---
name: Deployment on remote server
on:
  workflow_call:
    inputs:
      APP_IMAGE_NAME:
        required: true
        type: string
      APP_CONTAINER_NAME:
        required: true
        type: string
jobs:
  deploy:
    if: github.ref_name == 'develop' || github.ref_name == 'feat/container-for-bot-server'
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{secrets.MODULAR_HOST}}
          username: ${{secrets.HOST_USER}}
          key: ${{secrets.HOST_SSH_KEY}}
          script: |
            docker stop ${{inputs.APP_CONTAINER_NAME}}
            docker rm ${{inputs.APP_CONTAINER_NAME}}
            docker rmi ${{secrets.DOCKERHUB_USERNAME}}/${{inputs.APP_IMAGE_NAME}}:latest
            docker pull ${{secrets.DOCKERHUB_USERNAME}}/${{inputs.APP_IMAGE_NAME}}:latest
            docker run -d \
              --name=${{inputs.APP_CONTAINER_NAME}} \
              --hostname=${{inputs.APP_CONTAINER_NAME}} \
              --net=${{secrets.MODULAR_NETWORK_NAME}} \
              --restart=unless-stopped \
              -e DEBUG=FALSE \
              -e DJANGO_SUPERUSER_USERNAME=${{secrets.DJANGO_SUPERUSER_USERNAME}} \
              -e DJANGO_SUPERUSER_PASSWORD=${{secrets.DJANGO_SUPERUSER_PASSWORD}} \
              -e DJANGO_SUPERUSER_EMAIL=${{secrets.DJANGO_SUPERUSER_EMAIL}} \
              -e ALLOWED_HOSTS=${{secrets.DJANGO_ALLOWED_HOSTS}} \
              -e CSRF_TRUSTED_ORIGINS=${{secrets.DJANGO_CSRF_TRUSTED_ORIGINS}} \
              -e POSTGRES_DB=${{secrets.DJANGO_DB_NAME}} \
              -e POSTGRES_USER=${{secrets.DJANGO_POSTGRES_USER}} \
              -e POSTGRES_PASSWORD=${{secrets.DJANGO_POSTGRES_PASSWORD}} \
              -e DB_HOST='postgres' \
              -e DB_PORT=5432 \
              -v bot_static:/app/bot_constructor/static/ \
              -v bot_media:/app/bot_constructor/media/ \
              ${{secrets.DOCKERHUB_USERNAME}}/${{inputs.APP_IMAGE_NAME}}:latest