swagger: '2.0'
info:
  title: Snippets API
  version: v1
basePath: /api
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Token:
    type: apiKey
    name: Authorization
    in: header
security:
- Token: []
paths:
  /auth/token/login/:
    post:
      operationId: auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TokenCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenCreate'
      tags:
      - auth
    parameters: []
  /auth/token/logout/:
    post:
      operationId: auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      responses:
        '201':
          description: ''
      tags:
      - auth
    parameters: []
  /carts/:
    get:
      operationId: carts_list
      description: Вьюсет карточки товаров
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Cart'
      tags:
      - carts
    post:
      operationId: carts_create
      description: Вьюсет карточки товаров
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Cart'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Cart'
      tags:
      - carts
    parameters: []
  /carts/{id}/:
    get:
      operationId: carts_read
      description: Вьюсет карточки товаров
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Cart'
      tags:
      - carts
    put:
      operationId: carts_update
      description: Вьюсет карточки товаров
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Cart'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Cart'
      tags:
      - carts
    patch:
      operationId: carts_partial_update
      description: Вьюсет карточки товаров
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Cart'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Cart'
      tags:
      - carts
    delete:
      operationId: carts_delete
      description: Вьюсет карточки товаров
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - carts
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this Карточка.
      required: true
      type: integer
  /shopingCart/:
    get:
      operationId: shopingCart_list
      description: Вьюсет для списка покупок
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ShoppingCartRead'
      tags:
      - shopingCart
    post:
      operationId: shopingCart_create
      description: Вьюсет для списка покупок
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ShoppingCartWrite'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ShoppingCartWrite'
      tags:
      - shopingCart
    parameters: []
  /shopingCart/{id}/:
    get:
      operationId: shopingCart_read
      description: Вьюсет для списка покупок
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ShoppingCartRead'
      tags:
      - shopingCart
    put:
      operationId: shopingCart_update
      description: Вьюсет для списка покупок
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ShoppingCartWrite'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ShoppingCartWrite'
      tags:
      - shopingCart
    patch:
      operationId: shopingCart_partial_update
      description: Вьюсет для списка покупок
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ShoppingCartWrite'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ShoppingCartWrite'
      tags:
      - shopingCart
    delete:
      operationId: shopingCart_delete
      description: Вьюсет для списка покупок
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - shopingCart
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this Покупка.
      required: true
      type: integer
  /users/:
    get:
      operationId: users_list
      description: ''
      parameters:
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
      - users
    post:
      operationId: users_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UserCreate'
      tags:
      - users
    parameters: []
  /users/activation/:
    post:
      operationId: users_activation
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Activation'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Activation'
      tags:
      - users
    parameters: []
  /users/me/:
    get:
      operationId: users_me_read
      description: ''
      parameters:
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
      - users
    put:
      operationId: users_me_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - users
    patch:
      operationId: users_me_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - users
    delete:
      operationId: users_me_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - users
    parameters: []
  /users/resend_activation/:
    post:
      operationId: users_resend_activation
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
      - users
    parameters: []
  /users/reset_password/:
    post:
      operationId: users_reset_password
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
      - users
    parameters: []
  /users/reset_password_confirm/:
    post:
      operationId: users_reset_password_confirm
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PasswordResetConfirm'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      tags:
      - users
    parameters: []
  /users/reset_username/:
    post:
      operationId: users_reset_username
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
      - users
    parameters: []
  /users/reset_username_confirm/:
    post:
      operationId: users_reset_username_confirm
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UsernameResetConfirm'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UsernameResetConfirm'
      tags:
      - users
    parameters: []
  /users/set_password/:
    post:
      operationId: users_set_password
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetPassword'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetPassword'
      tags:
      - users
    parameters: []
  /users/set_username/:
    post:
      operationId: users_set_username
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetUsername'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetUsername'
      tags:
      - users
    parameters: []
  /users/{id}/:
    get:
      operationId: users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - users
    put:
      operationId: users_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - users
    patch:
      operationId: users_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - users
    delete:
      operationId: users_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - users
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this пользователь.
      required: true
      type: integer
definitions:
  TokenCreate:
    type: object
    properties:
      password:
        title: Password
        type: string
        minLength: 1
      username:
        title: Username
        type: string
        minLength: 1
  Cart:
    required:
    - name
    - measurement_unit
    - description
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Название карточки
        description: Введите название карточки
        type: string
        maxLength: 256
        minLength: 1
      measurement_unit:
        title: Единицы измерения
        type: string
        minLength: 1
      description:
        title: Description
        type: string
        minLength: 1
  ShoppingCartRead:
    required:
    - user
    - cart
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: Покупатель
        type: integer
      cart:
        $ref: '#/definitions/Cart'
  ShoppingCartWrite:
    required:
    - cart
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      cart:
        title: Покупки
        type: integer
  User:
    type: object
    properties:
      email:
        title: Адрес электронной почты
        type: string
        format: email
        maxLength: 254
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Имя пользователя
        description: Обязательное поле. Не более 150 символов. Только буквы, цифры
          и символы @/./+/-/_.
        type: string
        readOnly: true
        minLength: 1
  UserCreate:
    required:
    - username
    - password
    type: object
    properties:
      email:
        title: Адрес электронной почты
        type: string
        format: email
        maxLength: 254
      username:
        title: Имя пользователя
        description: Обязательное поле. Не более 150 символов. Только буквы, цифры
          и символы @/./+/-/_.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      id:
        title: ID
        type: integer
        readOnly: true
      password:
        title: Password
        type: string
        minLength: 1
  Activation:
    required:
    - uid
    - token
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
  SendEmailReset:
    required:
    - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  PasswordResetConfirm:
    required:
    - uid
    - token
    - new_password
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
      new_password:
        title: New password
        type: string
        minLength: 1
  UsernameResetConfirm:
    required:
    - new_username
    type: object
    properties:
      new_username:
        title: Имя пользователя
        description: Обязательное поле. Не более 150 символов. Только буквы, цифры
          и символы @/./+/-/_.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
  SetPassword:
    required:
    - new_password
    - current_password
    type: object
    properties:
      new_password:
        title: New password
        type: string
        minLength: 1
      current_password:
        title: Current password
        type: string
        minLength: 1
  SetUsername:
    required:
    - current_password
    - new_username
    type: object
    properties:
      current_password:
        title: Current password
        type: string
        minLength: 1
      new_username:
        title: Имя пользователя
        description: Обязательное поле. Не более 150 символов. Только буквы, цифры
          и символы @/./+/-/_.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
